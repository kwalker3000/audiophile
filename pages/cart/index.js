import React from 'react';
import Head from 'next/head'
import axios from 'axios'
//import { loadStripe } from '@stripe/stripe-js';
import getStripe from '../../lib/get-stripe';

import { CartItems } from '../../src/components/CartItems';
import { useAppContext } from '../../src/context/appContext';
// Make sure to call `loadStripe` outside of a component’s render to avoid
// recreating the `Stripe` object on every render.


// const stripePromise = loadStripe(
//   process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
// );

//const axios = require('axios').default;

export default function PreviewPage() {
    let { cart } = useAppContext()


    let redirectToCheckout = async () => {
        // Create Stripe checkout
        const {
            data: { id }
        } = await axios.post('/api/checkout_sessions', {
            items: Object.entries(cart).map(([_, { stripe_id, quantity }]) => ({
                price: stripe_id,
                quantity,
            })),
        });

        // Redirect to checkout
        const stripe = await getStripe();
        await stripe.redirectToCheckout({ sessionId: id })
    };
    
  React.useEffect(() => {
    // Check to see if this is a redirect back from Checkout
    const query = new URLSearchParams(window.location.search);
    if (query.get('success')) {
      console.log('Order placed! You will receive an email confirmation.');
    }

    if (query.get('canceled')) {
      console.log('Order canceled -- continue to shop around and checkout when you’re ready.');
    }
  }, []);

  return (
    <div>
      <Head>
        <title>Cart | Audiophile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
	<form action="/api/checkout_sessions" method="POST">
	<section>
          <CartItems redirectToCheckout={redirectToCheckout}/>
	    <button type="submit" role="link"
	    className="btn btn-txt">
	    <span className="btn-txt">Checkout</span>
	    </button>
	</section>
	</form>

    </div>
  );
}
