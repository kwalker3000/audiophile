
import NextAuth from 'next-auth';
//import GoogleProvider from 'next-auth/providers/google';
import GithubProvider from 'next-auth/providers/github';
import PostgresAdapter from '../../../lib/adapter';

const pgp = require('pg-promise')()
const cn = {
  host: 'hansken-01.db.elephantsql.com',
  port: 5432,
  database: 'llblthaj',
  user: 'llblthaj',
  password: `${process.env.ELEPHANT_PASS}`,
  max: 5,
}

const db = pgp(cn)

export default NextAuth({
    providers: [
	// GoogleProvider({
	//     clientId: process.env.GOOGLE_ID,
	//     clientSecret: process.env.GOOGLE_SECRET,
	    
	// }),
	GithubProvider({
	    clientId: process.env.GITHUB_ID,
	    clientSecret: process.env.GITHUB_SECRET,
	}),
    ],
    adapter: PostgresAdapter(db),
    callbacks: {},
});

//const callbacks = {};

// callbacks.signIn = async (user, account, metadata) => {
//     if (account.provider === 'github') {
// 	const githubUser = {
// 	    id: metadata.id,
// 	    login: metadata.login,
// 	    name: metadata.name,
// 	    avatar: user.image
// 	}

// 	user.accessToken = await getTokenFromYourAPIServer('github', githubUser)
// 	return true;
//     }
//     return false;
// }

// callbacks.jwt = async (token, user) => {
//     if (user) {
// 	token = { accessToken: user.accessToken }
//     }

//     return token
// }

// callbacks.session = async (session, token) => {
//     session.accessToken = token.accessToken
//     return session
// }
